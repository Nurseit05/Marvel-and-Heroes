{"version":3,"file":"static/js/77.1bcf1130.chunk.js","mappings":"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","sources":["components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js"],"sourcesContent":["import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './comicsList.scss';\n\nconst ComicsList = () => {\n\n    const [comicsList, setComicsList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(0);\n    const [comicsEnded, setComicsEnded] = useState(false);  \n\n    const {loading, error, getAllComics} = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, [])\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllComics(offset)\n            .then(onCharListLoaded)\n    }\n\n    const onCharListLoaded = (newComicsList) => {\n        let ended = false;\n        if (newComicsList.length < 8) {\n            ended = true;\n        }\n\n        setComicsList(comicsList => [...comicsList, ...newComicsList]);\n        setNewItemLoading(false);\n        setOffset(offset + 9);\n        setComicsEnded(ended)\n    }\n\n    function renderItems(arr) {\n        const items =  arr.map((item, i) => {\n            \n            return (\n                <li className=\"comics__item\" key={item.id} >\n                    <Link to={`/comics/${item.id}`}>\n                        <img src={item.thumbnail} alt={item.name} className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">{item.title}</div>\n                        <div className=\"comics__item-price\">{item.price}</div>\n                    </Link>\n                </li>\n            )\n        });\n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    const items = renderItems(comicsList);\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n    return (\n        <div className=\"comics__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button disabled={newItemLoading} \n                style={{'display' : comicsEnded ? 'none' : 'block'}}\n                className=\"button button__main button__long\"\n                onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","import AppBanner from \"../appBanner/AppBanner\";\nimport ComicsList from \"../comicsList/ComicsList\";\n\nconst ComicsPage = () => {\n    return (\n        <>\n            <AppBanner/>\n            <ComicsList/>\n        </>\n    )\n}\n\nexport default ComicsPage;"],"names":["_jsxs","className","children","_jsx","src","avengers","alt","avengersLogo","_useState","useState","_useState2","_slicedToArray","comicsList","setComicsList","_useState3","_useState4","newItemLoading","setNewItemLoading","_useState5","_useState6","offset","setOffset","_useState7","_useState8","comicsEnded","setComicsEnded","_useMarvelService","useMarvelService","loading","error","getAllComics","useEffect","onRequest","initial","then","onCharListLoaded","newComicsList","ended","length","concat","_toConsumableArray","items","arr","map","item","i","Link","to","id","thumbnail","name","title","price","renderItems","errorMessage","ErrorMessage","spinner","Spinner","disabled","style","onClick","_Fragment","AppBanner","ComicsList"],"sourceRoot":""}