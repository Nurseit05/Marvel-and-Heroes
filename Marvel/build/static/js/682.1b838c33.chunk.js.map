{"version":3,"file":"static/js/682.1b838c33.chunk.js","mappings":"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","sources":["components/appBanner/AppBanner.js","components/errorMessage/ErrorMessage.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js","services/MarvelService.js","hooks/http.hook.js"],"sourcesContent":["import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import img from './error.gif';\n\nconst ErrorMessage = () => {\n    return (\n        <img style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}} src={img} alt=\"error\" />\n    )\n}\n\nexport default ErrorMessage;","import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport {CSSTransition, TransitionGroup} from 'react-transition-group';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './comicsList.scss';\n\nconst ComicsList = () => {\n\n    const [comicsList, setComicsList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(0);\n    const [comicsEnded, setComicsEnded] = useState(false);  \n\n    const {loading, error, getAllComics} = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, [])\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllComics(offset)\n            .then(onCharListLoaded)\n    }\n\n    const onCharListLoaded = (newComicsList) => {\n        let ended = false;\n        if (newComicsList.length < 8) {\n            ended = true;\n        }\n\n        setComicsList(comicsList => [...comicsList, ...newComicsList]);\n        setNewItemLoading(false);\n        setOffset(offset + 9);\n        setComicsEnded(ended)\n    }\n\n    function renderItems(arr) {\n        const items =  arr.map((item, i) => {\n            \n            return (\n                <CSSTransition key={item.id} timeout={500} classNames=\"comics__item\" >\n                    <li className=\"comics__item\" key={item.id} >\n                        <Link to={`/comics/${item.id}`}>\n                            <img src={item.thumbnail} alt={item.name} className=\"comics__item-img\"/>\n                            <div className=\"comics__item-name\">{item.title}</div>\n                            <div className=\"comics__item-price\">{item.price}</div>\n                        </Link>\n                    </li>\n                </CSSTransition>\n            )\n        });\n        return (\n            <ul className=\"comics__grid\">\n                <TransitionGroup component={null}>\n                    {items}\n                </TransitionGroup>\n            </ul>\n        )\n    }\n\n    const items = renderItems(comicsList);\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n    return (\n        <div className=\"comics__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button disabled={newItemLoading} \n                style={{'display' : comicsEnded ? 'none' : 'block'}}\n                className=\"button button__main button__long\"\n                onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","import AppBanner from \"../appBanner/AppBanner\";\nimport ComicsList from \"../comicsList/ComicsList\";\n\nconst ComicsPage = () => {\n    return (\n        <>\n            <AppBanner/>\n            <ComicsList/>\n        </>\n    )\n}\n\nexport default ComicsPage;","import { useHttp } from \"../hooks/http.hook\";\n\nconst useMarvelService = () => {\n    const {loading, request, error, clearError, process, setProcess} = useHttp();\n\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n    const _apiKey = 'apikey=efaf2a081b733ec0ef18e064fe671b94';\n    const _baseOffset = 210;\n\n    const getAllCharacters = async (offset = _baseOffset) => {\n        const res = await request(`${_apiBase}characters?orderBy=-modified&limit=9&offset=${offset}&${_apiKey}`);\n        return res.data.results.map(_transformCharacter);\n    }\n\n    const getHeroInformation = async (name) => {\n        const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\n        return res.data.results.map(_transformCharacter);\n    }\n \n    const getCharacter = async (id) => {\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n        return _transformCharacter(res.data.results[0]);\n    }\n\n    const getAllComics = async (offset = 0) => {\n        const res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`);\n        return res.data.results.map(_transformComics);\n    }\n\n    const getComics = async (id) => {\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n\t\treturn _transformComics(res.data.results[0]);\n        \n    }\n\n    const getCharacterByName = async (name) => {\n\t\tconst res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\n\t\treturn res.data.results.map(_transformCharacter);\n\t};\n\n    const _transformCharacter = (char) => {\n        return {\n            id: char.id,\n            name: char.name,\n            description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n            homepage: char.urls[0].url,\n            wiki: char.urls[1].url,\n            comics: char.comics.items\n        }\n    }\n\n    const _transformComics = (comics) => {\n        return {\n            id: comics.id,\n            title: comics.title,\n            description: comics.description || \"There is no description\",\n            pageCount: comics.pageCount ? `${comics.pageCount} p.` : \"No information about the number of pages\",\n            thumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\n            language: comics.textObjects[0]?.language || \"en-un\",\n            price: comics.prices[0].price\n\t\t\t\t? `${comics.prices[0].price}$`\n\t\t\t\t: \"not available\",\n        }\n    }\n\n    return {\n        loading, error, getCharacterByName, getAllCharacters, \n        getCharacter, clearError, getComics, getAllComics, process,\n        setProcess, getHeroInformation\n    }\n}\n\nexport default useMarvelService;","import { useState, useCallback } from \"react\";\n\nexport const useHttp = () => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [process, setProcess] = useState('waiting');\n\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json; charset=utf-8'}) => {\n\n        setLoading(true);\n        setProcess('loading');\n\n        try {\n            const response = await fetch(url, {method, body, headers});\n\n            if (!response.ok) {\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n            }\n\n            const data = await response.json();\n\n            setLoading(false)\n            return data;\n        } catch(e) {\n            setLoading(false);\n            setError(e.message);\n            setProcess('error');\n            throw e;\n        }\n\n\n    }, [])\n\n\n    const clearError = useCallback(() => {\n        setError(null);\n        setProcess('loading');  \n    },[])\n\n    return {loading, request, clearError, error, process, setProcess}\n}"],"names":["_jsxs","className","children","_jsx","src","avengers","alt","avengersLogo","style","display","width","height","objectFit","margin","img","_useState","useState","_useState2","_slicedToArray","comicsList","setComicsList","_useState3","_useState4","newItemLoading","setNewItemLoading","_useState5","_useState6","offset","setOffset","_useState7","_useState8","comicsEnded","setComicsEnded","_useMarvelService","useMarvelService","loading","error","getAllComics","useEffect","onRequest","initial","then","onCharListLoaded","newComicsList","ended","length","concat","_toConsumableArray","items","arr","map","item","i","CSSTransition","timeout","classNames","Link","to","id","thumbnail","name","title","price","TransitionGroup","component","renderItems","errorMessage","ErrorMessage","spinner","Spinner","disabled","onClick","_Fragment","AppBanner","ComicsList","_useHttp","setLoading","setError","process","setProcess","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","undefined","fetch","sent","ok","Error","status","json","abrupt","t0","message","stop","_x","apply","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","res","results","_transformCharacter","getHeroInformation","_ref2","_callee2","_context2","getCharacter","_ref3","_callee3","_context3","_x2","_ref4","_callee4","_args4","_context4","_transformComics","getComics","_ref5","_callee5","_context5","_x3","getCharacterByName","_ref6","_callee6","_context6","_x4","char","description","slice","path","extension","homepage","urls","wiki","comics","_comics$textObjects$","pageCount","language","textObjects","prices"],"sourceRoot":""}